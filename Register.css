*{
    padding:0;
    margin:0;
}

.registerHeader{
    margin-top:-20%;
    text-align:center;
    color:white;
    
}

.Content {
    width: 350px;
    height: 550px;
    box-sizing: border-box;
    transform: translate(-50%,-50%);
    border: hidden;
    background: rgba(0,0,0,0.5);
    align-content: center;
    margin-left:50%;
    margin-top:60%;
}


.SignUp {
    width: 400px;
    height: 400px;
    align-content: center;
    position: absolute;
    top: 45%;
    left: 50%;
    padding: 80px 50px;
    transform: translate(-50%,-50%);
    background-image: url('/assets//Background.jpg');
    background-repeat: no-repeat;
    background-size: cover;
    border-radius:10px;
}

.InputLayout{
    margin-top:10%;
    margin-left:20%;
}

.SubmitBtn {
    width: 100px;
    height: 40px;
    margin-left: 17%;
    background-color: black;
    color: white;
    font: inherit;
    border: 0;
    outline: 0;
    border-radius: 5em;
    box-sizing: border-box;
    opacity: 0.6;
    margin-top: 10%;
}


.SubmitBtn:hover ,.BackBtn:hover{
        opacity: 1;
}

.BackBtn{
    font-weight:bold;
    color:white;
    margin-left: -10%;
    transform: translateY(-250%);
    border: 0;
    outline: 0;
    width: 30px;
    height: 30px;
    background-color: black;
    border-radius: 10em;
    opacity: 0.7;
}


.rblArtistCustomer{
    margin-left:12%;
}

.rblGender {
    margin-left:15%;
    margin-top:-3%;
}

.UsernameCV,.UsernameREV {
    margin-left: 70%;
    margin-top: -12%;
    float: left;
}

.UsernameREV{
    margin-top:-13%;
}


.rfvArtistCustomer {
    margin-left: 60%;
    margin-top: -6%;
    float: left;
}

.ConfirmPasswordCV {
    margin-left: 86%;
    margin-top: -22%;
    float: left;
}

.EmailCV{
    margin-left: 87%;
    margin-top: -18%;
    float: left;
}

.EmailREV {
    margin-left: 86%;
    margin-top: -16%;
    float: left;
}

.PasswordREV {
    margin-left: 87%;
    margin-top: -17%;
    float: left;
}

.UsernameRFV, .GenderRFV, .PasswordRFV, .ConfirmPasswordRFV, .EmailRFV, .TypeRFV {
    float: left;
    margin-left: 70%;
    margin-top: -14%;
}

.GenderRFV{
    margin-top:-10%;
}

.PasswordRFV{
    margin-left:87%;
    margin-top:-16%;
}

.ConfirmPasswordRFV {
    margin-left: 87%;
    margin-top: -20%;
}

.EmailRFV {
    margin-left: 87%;
    margin-top: -16%;
}

.TypeRFV {
    
    margin-top:-10%;
}

.Namelbl{
    float:left;
    margin-left:87%;
    margin-top:-20%;
}

.NameRFV{
    float:left;
    margin-left:87%;
    margin-top:-18%;
}

.NameREV{
    float:left;
    margin-left:87%;
    margin-top:-15%;
}


.PopOut {
    color: black;
    background-color: red;
    border-radius: 10em;
    padding: 0.15px 6px;
    cursor: pointer;
    width: 6px;
    margin-left: -8%;
    float: left;
    margin-top: -12%;
    display: inline-block;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.PopOut .PopOutText {
        visibility: hidden;
        width:70%;
        background-color:black;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 8px 2px;
        position: absolute;
        z-index: 1;
        margin-left:-10%;
        margin-top:-30%;
        
}

.PopOut .PopOutText::after {
    content: "";
    position: absolute;
   margin-left: -5px;
    border-width: 40px;
    border-style: solid;
    border-color: black transparent transparent transparent;
    margin-left:-15%;
    z-index:-1;
    
}

.PopOut .show {
    visibility: visible;
    -webkit-animation: fadeIn 1s;
    animation: fadeIn 1s;
}

@-webkit-keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}






/*textbox*/
:root {
    /* generic */
    --gutterSm: 0.3rem;
    --gutterMd: 0.8rem;
    --gutterLg: 1.6rem;
    --gutterXl: 2.4rem;
    --gutterXx: 7.2rem;
    --colorPrimary400: #7e57c2;
    --colorPrimary600: #5e35b1;
    --colorPrimary800: #4527a0;
    --fontFamily: "Dosis", sans-serif;
    --fontSizeSm: 1rem;
    --fontSizeMd: 1.6rem;
    --fontSizeLg: 2.1rem;
    --fontSizeXl: 2.8rem;
    --fontSizeXx: 3.6rem;
    --lineHeightSm: 1.1;
    --lineHeightMd: 1.8;
    --transitionDuration: 300ms;
    --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
    /* floated labels */
    --inputPaddingV: var(--gutterSm);
    --inputPaddingH: var(--gutterSm);
    --inputFontSize: var(--fontSizeSm);
    --inputLineHeight: var(--lineHeightMd);
    --labelScaleFactor: 0.8;
    --labelDefaultPosY: 50%;
    --labelTransformedPosY: calc( (var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) - (var(--inputFontSize) * var(--inputLineHeight)) );
    --inputTransitionDuration: var(--transitionDuration);
    --inputTransitionTF: var(--transitionTF);
}


::before,
::after {
    box-sizing: border-box;
}


.Wrapper {
    flex: 0 0 80%;
    max-width: 80%;
}

.Input {
    position: relative;
}

.Input-text {
    display: block;
    margin: 0;
    margin-left: 15%;
    padding: var(--inputPaddingV) var(--inputPaddingH);
    color: black;
    width: 60%;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    border: none;
    border-radius: 0.4rem;
    transition: box-shadow var(--transitionDuration);
}

.Input-text::placeholder {
        color: #B0BEC5;
}

.Input-text:focus {
        outline: none;
        box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary800);
}

.Input-label {
    display: block;
    position: absolute;
    bottom: 50%;
    left: 1rem;
    color: white;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    opacity: 0;
    transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
    transform-origin: 0 0;
    transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF), transform var(--inputTransitionDuration) var(--inputTransitionTF), visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF), z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
    visibility: hidden;
    z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
    visibility: visible;
    z-index: 1;
    opacity: 1;
    transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
    transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms;
}
